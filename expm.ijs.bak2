NB. expm.ijs
NB. Calculate matrix exponent and its integral
NB. 
NB. pexpm  pre-calculate time-invariant parts for expm and iexpm
NB. expm   calculate matrix exponent via Lagrange-Sylvester
NB.        interpolation polynome
NB.
NB. TODO
NB.   - отфильтровывать из M нулевые Mi, соответствующие действительным labmda
NB.
NB. 2008-01-10 1.0.0 Igor Zhuravlov

NB. ===========================================================================
NB. pexpm
NB. Pre-calculate time-invariant parts for expm and iexpm
NB.
NB. Usage:
NB.   'M P V'=. pexpm A
NB. where:
NB.   A - N-by-N state matrix of LTI system from SS representation
NB.   M - K-by-N matrix for equation M*A(t)=L(t)
NB.   P - N-by-N-by-N matrix, powers 0..(N-1) of A
NB.   V - N-vector, eigenvalies of A


NB. ===========================================================================
NB. expm
NB. Calculate matrix exponent exp(A*T) of matrix A for discretizing period T
NB. via Lagrange-Sylvester interpolation polynome
NB.
NB. Usage:
NB.   E=. expm M;P;V;T
NB. where:
NB.   M - K-by-N matrix for equation M*A(t)=L(t)
NB.   P - N-by-N-by-N matrix, powers 0..(N-1) of A
NB.   V - N-vector, eigenvalies of A
NB.   T - sampling period, T>0
NB.   E - N-by-N matrix, matrix exponent exp(A*T)
NB.   K = N + C, where C is quantity of complex eigenvalues
NB.   N >= 0
NB.
NB. Notes:
NB.   Matrix A need not to be invertible
NB.
NB. Reference:
NB.   008_Theory_Inf_Proc_Syst_Ch4.pdf

expm=: 3 : 0
  'M P V T'=. y
  vmatrix_jlapack_ M                     NB. M is table
  'k n'=. $ M
  assert. k >: n
  assert. 3 = # $ P                      NB. Apw is report (3-rank array)
  assert. *./ n = $ P                    NB. all dimentions are equal to n
  assert. 1 = # $ V                      NB. V is vector
  assert. n = # V
  NB.SUM(a[i](T)*A^i,i=0..n-1)
)

NB. =========================================================
NB. GENERAL DATA FLOW:
NB. vm verb vlambda
NB. where vm      - вектор кратностей mi и mj, соответствующих
NB.                 собственным значениям из vlambda
NB.       vlambda - вектор уникальных собственных значений без
NB.                 учёта комплексно-сопряжённых
NB. following holds:
NB.

NB. ---------------------------------------------------------
NB. prepV
NB. Prepare eigenvalues: remove dups and self-adjoiners, count.
NB. Outputs 4 columns:
NB.   eigenvalue , multiplicity , minimal polynom's order
NB.
NB. If:
NB.       'vlambda vm vk' =. |: prepV eigenvalues_of_A
NB. then
NB.       vk -: (# vm) $ k
NB.       (+/ vm) = k
NB.       (# vm) = (# vlambda) = (r - C)
NB. where k - matrix A minimal polynom's order
NB.       r - quantity of unique eigenvalues
NB.       C - quantity of unique complex eigenvalues without
NB.           self-adjoiners
NB.
NB. Example:
NB.    prepV 1 1 2 3j3 3j_3 4j4 4j_4 4j4 4j_4
NB.   1 2 9
NB.   2 1 9
NB. 3j3 2 9
NB. 4j4 4 9

NB. prepV=: (~. ,. (cnt * mul)) @ nnegim ,. #

prepV=: (~. ,. (cnt (* ,. (_1 + ])) mul)) @ nnegim ,. #

cnt=: 1: #. =               NB. count atoms
mul=: (>: @ (0 < im) @ ~.)  NB. multipliers vector: 1 for real, 2 for complex
nnegim=: ] #~ 0 <: im       NB. filter out atoms with negative imaginary part
im=: 11 o. ]                NB. take imaginary part

NB. ---------------------------------------------------------
NB. Gi=. makeGi lambdai , mi , k
NB.    makeGi 1j1 3 5
NB. 1 1 1 1  1
NB. 0 1 2 3  4
NB. 0 0 2 6 12

makeGi=: (xIOmi makeRji"0/ xIOk)"1
makeRji=: ! * ! @ [         NB. (!y)%(!y-x)
xIOmi=: xIO @ getmi         NB. i. x: mi
xIOk=: xIO @ getk           NB. i. x: k
xIO=: i. @ x:

NB. ---------------------------------------------------------
NB. T1i=. makeT lambdai , mi , k
NB. 'T2j T3j'=. 9 11 o."0 2 makeT lambdaj , mj , k
NB.    makeT 1.1 3 5
NB. 1 1.1 1.21 1.331 1.4641
NB. 0   1  1.1  1.21  1.331
NB. 0   0    1   1.1   1.21
NB.    makeT 1j1 3 5
NB. 1 1j1 0j2 _2j2   _4
NB. 0   1 1j1  0j2 _2j2
NB. 0   0   1  1j1  0j2

makeT=: IOnmi shrybyx lipows
IOnmi=: - @ i. @ getmi        NB. 0 _1 _2 ... -(mi-1)
shrybyx=: (|.!.0)"0 1         NB. shift y to right by x
lipows=: getli (^ i.) getk    NB. lambdai ^ i. k

NB. ---------------------------------------------------------
NB. Utilities

getli=: 0: { ]                NB. get lambdai or lambdaj
getmi=: 1: { ]                NB. get mi or mj
getk=: 2: { ]                 NB. get k


NB. make_M
NB. refine_M
NB. gen_M
NB.V=. 1 {:: zgeev_jlapack_ A               NB. eigenvalues(A)

